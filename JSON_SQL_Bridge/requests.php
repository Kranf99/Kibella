<?php
/*
JSON_SQL_Bridge
Copyright 2016 Frank Vanden berghen
All Right reserved.

JSON_SQL_Bridge is not a free software. The JSON_SQL_Bridge software is NOT licensed under the "Apache License". 
If you are interested in distributing, reselling, modifying, contibuting or in general creating 
any derivative work from JSON_SQL_Bridge, please contact Frank Vanden Berghen at frank@timi.eu.
*/
namespace kibella; require_once __DIR__."/config.php"; ob_start(); lb6("200 OK"); $Obd=$_SERVER["REQUEST_URI"]; $lby=$_SERVER["REQUEST_METHOD"]; $lar=file_get_contents("php://input"); $O7s=json_decode($lar,TRUE); $Oby=l1n; if (preg_match( "/$Oby%2C/" ,$Obd)) { if (array_key_exists("docs",$O7s)) { O3n("{\"docs\":["); for ($O4a=0; $O4a<count($O7s["docs"]); $O4a ++) { $lbz=$O7s["docs"][$O4a]; if ($O4a>0) O3n(","); O7b("","",1,O23,"false"); } O3n("]}"); } } else if (preg_match("/_msearch/i",$Obd)) { Oaq($lar); $O7s=explode("\n",$lar); if (count($O7s)>1) { $O5x=$O7s[1]; lbb(O2g,$O5x); } } else if (preg_match("/_mapping\\/field\\//i",$Obd)) { $Obz=lbd($Obd,ESDIRNAME,"begin"); $O1=$Obz["object"]; l82($O1); } else if (preg_match("/index-pattern\\/\$/i",$Obd)) { $Obz=lbd($Obd,ESDIRNAME,"begin"); $la=$Obz["object"]; O7b("index-pattern",$la,1,O23,"true"); } else if (preg_match("/index-pattern\\/_search/i",$Obd)) { l8a(O26,O1x,"*"); } else if (preg_match("/index-pattern/i",$Obd)) { $Obz=lbd($Obd,ESDIRNAME,"end"); $O1=$Obz["object"]; if ($lby == "POST") { O7b("index-pattern",$O1,1,O23,"true"); } else if ($lby == "DELETE") { l79(O26,O1x,$O1); } } else if (preg_match("/_update\$/i",$Obd)) { lbb(l2g,$O7s["doc"]["defaultIndex"],$Obb="raw"); } else if (preg_match("/(dashboard|search|visualization)\\/_search/i",$Obd,$l4v)) { assert(count($l4v)>=2,"Variable \$matches with the matched pattern has at least 1 element (found ".count($l4v).")"); $lc0=$l4v[1]; assert(array_key_exists("query",$O7s),"Attribute 'query' exists in the request array"); if (array_key_exists("simple_query_string",$O7s["query"]) && array_key_exists("query",$O7s["query"]["simple_query_string"])) { $O62=$O7s["query"]["simple_query_string"]["query"]; } else { $O62="*"; } l8a(l3,$lc0,$O62); } else if (preg_match("/\\/dashboard|\\/search|\\/visualization/i",$Obd,$l4v)) { assert(count($l4v)>=1,"Variable \$matches with the matched pattern has at least 1 element (found ".count($l4v).")"); $lc0=substr($l4v[0],1); $Obz=lbd($Obd,ESDIRNAME,"end"); $O1=$Obz["object"]; if ($lby == "POST") { $O85=$lar; l85($lc0,$O85); } else if ($lby == "GET") { $O1=Obk($O1); O7t($lc0,$O1,$l7u=FALSE); } else if ($lby == "DELETE") { $O1=Obk($O1); l79(l3,$lc0,$O1); } } else if (preg_match("/\\/_search/i",$Obd,$l4v)) { $Oc0=str_replace($l4v[0],"",$Obd); $Obz=lbd($Oc0,ESDIRNAME,"end"); $l3k=$Obz["object"]; if (count($O7s["query"]["ids"]["values"])>0) { $l7x=$O7s["query"]["ids"]["values"][0]; l7w($l3k,$lar,$l7x); } } else if (preg_match("/_mget/i",$Obd)) { assert(array_key_exists("docs",$O7s),"Attribute 'docs' exists in the request array"); assert(count($O7s["docs"] == 1),"There is only one request in the request array"); if (array_key_exists(l20,$O7s["docs"][0])) { $O1=$O7s["docs"][0][l20]; } else { $O1=""; } if (array_key_exists(O1z,$O7s["docs"][0])) { $Oj=$O7s["docs"][0][O1z]; switch ($Oj) { case (l1x): lb7(); break; case (O4): case (l1y): case (O1y): O7t($Oj,$O1); break; case (O1x): O81($O1); break; default : break; } } } else { $lbh=Obh($Obd); $lbi=$lbh["URI"]; $lc1=str_replace("/".ESDIRNAME,"",$lbi); $lc1=str_replace(l1n,"_kibana_4",$lc1); $lc1=preg_replace("/[\\/\\-\\.\\*]/","_",$lc1); if (function_exists( "kibella\\$lc1")) { call_user_func( "kibella\\$lc1"); } } ob_end_flush(); if (LOG) { fclose($O8h); } exit;