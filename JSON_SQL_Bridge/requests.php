<?php
/*
JSON_SQL_Bridge 1.0
Copyright 2016 Frank Vanden berghen
All Right reserved.

JSON_SQL_Bridge is not a free software. The JSON_SQL_Bridge software is NOT licensed under the "Apache License". 
If you are interested in distributing, reselling, modifying, contibuting or in general creating 
any derivative work from JSON_SQL_Bridge, please contact Frank Vanden Berghen at frank@timi.eu.
*/
namespace kibella; require_once "config.php"; ob_start(); Ob0("200 OK"); $lb8=$_SERVER["REQUEST_URI"]; $Obs=$_SERVER["REQUEST_METHOD"]; $Oal=file_get_contents("php://input"); $l7j=json_decode($Oal,TRUE); $lbt=O12; if (preg_match( "/$lbt%2C/" ,$lb8)) { if (array_key_exists("docs",$l7j)) { O36("{\"docs\":["); for ($O3u=0; $O3u<count($l7j["docs"]); $O3u ++) { $Obt=$l7j["docs"][$O3u]; if ($O3u>0) O36(","); O70("","",1,O1j,"false"); } O36("]}"); } } else if (preg_match("/_msearch/i",$lb8)) { lal($Oal); $l7j=explode("\n",$Oal); if (count($l7j)>1) { $O5h=$l7j[1]; Ob5(O1w,$O5h); } } else if (preg_match("/_mapping\\/field\\//i",$lb8)) { $lbu=Ob7($lb8,ESDIRNAME,"begin"); $O1=$lbu["object"]; O7s($O1); } else if (preg_match("/index-pattern\\/\$/i",$lb8)) { $lbu=Ob7($lb8,ESDIRNAME,"begin"); $O30=$lbu["object"]; O70("index-pattern",$O30,1,O1j,"true"); } else if (preg_match("/index-pattern\\/_search/i",$lb8)) { l82(O1m,O1d,"*"); } else if (preg_match("/index-pattern/i",$lb8)) { $lbu=Ob7($lb8,ESDIRNAME,"end"); $O1=$lbu["object"]; if ($Obs == "POST") { O70("index-pattern",$O1,1,O1j,"true"); } else if ($Obs == "DELETE") { l6y(O1m,O1d,$O1); } } else if (preg_match("/_update\$/i",$lb8)) { Ob5(l1w,$l7j["doc"]["defaultIndex"],$lb6="raw"); } else if (preg_match("/(dashboard|search|visualization)\\/_search/i",$lb8,$l4h)) { assert(count($l4h)>=2,"Variable \$matches with the matched pattern has at least 1 element (found ".count($l4h).")"); $Obu=$l4h[1]; assert(array_key_exists("query",$l7j),"Attribute 'query' exists in the request array"); if (array_key_exists("simple_query_string",$l7j["query"]) && array_key_exists("query",$l7j["query"]["simple_query_string"])) { $O5m=$l7j["query"]["simple_query_string"]["query"]; } else { $O5m="*"; } l82(l3,$Obu,$O5m); } else if (preg_match("/\\/dashboard|\\/search|\\/visualization/i",$lb8,$l4h)) { assert(count($l4h)>=1,"Variable \$matches with the matched pattern has at least 1 element (found ".count($l4h).")"); $Obu=substr($l4h[0],1); $lbu=Ob7($lb8,ESDIRNAME,"end"); $O1=$lbu["object"]; if ($Obs == "POST") { $O7x=$Oal; l7x($Obu,$O7x); } else if ($Obs == "GET") { $O1=lbf($O1); l7k($Obu,$O1,$O7k=FALSE); } else if ($Obs == "DELETE") { $O1=lbf($O1); l6y(l3,$Obu,$O1); } } else if (preg_match("/\\/_search/i",$lb8,$l4h)) { $lbv=str_replace($l4h[0],"",$lb8); $lbu=Ob7($lbv,ESDIRNAME,"end"); $l31=$lbu["object"]; if (count($l7j["query"]["ids"]["values"])>0) { $O7n=$l7j["query"]["ids"]["values"][0]; O7m($l31,$Oal,$O7n); } } else if (preg_match("/_mget/i",$lb8)) { assert(array_key_exists("docs",$l7j),"Attribute 'docs' exists in the request array"); assert(count($l7j["docs"] == 1),"There is only one request in the request array"); if (array_key_exists(l1g,$l7j["docs"][0])) { $O1=$l7j["docs"][0][l1g]; } else { $O1=""; } if (array_key_exists(O1f,$l7j["docs"][0])) { $l52=$l7j["docs"][0][O1f]; switch ($l52) { case (l1d): Ob1(); break; case (O4): case (l1e): case (O1e): l7k($l52,$O1); break; case (O1d): l7s($O1); break; default : break; } } } else { $Obb=lbc($lb8); $Obc=$Obb["URI"]; $Obv=str_replace("/".ESDIRNAME,"",$Obc); $Obv=str_replace(O12,"_kibana_4",$Obv); $Obv=preg_replace("/[\\/\\-\\.\\*]/","_",$Obv); if (function_exists( "kibella\\$Obv")) { call_user_func( "kibella\\$Obv"); } } ob_end_flush(); if (LOG) { fclose($l8b); } exit;