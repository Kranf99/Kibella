<?php
/*
JSON_SQL_Bridge 1.0
Copyright 2016 Frank Vanden berghen
All Right reserved.

JSON_SQL_Bridge is not a free software. The JSON_SQL_Bridge software is NOT licensed under the "Apache License". 
If you are interested in distributing, reselling, modifying, contibuting or in general creating 
any derivative work from JSON_SQL_Bridge, please contact Frank Vanden Berghen at frank@timi.eu.
*/
namespace kibella; require_once "config.php"; ob_start(); lb4("200 OK"); $Obb=$_SERVER["REQUEST_URI"]; $lbw=$_SERVER["REQUEST_METHOD"]; $lap=file_get_contents("php://input"); $O7m=json_decode($lap,TRUE); $Obw=O13; if (preg_match( "/$Obw%2C/" ,$Obb)) { if (array_key_exists("docs",$O7m)) { l37("{\"docs\":["); for ($l3v=0; $l3v<count($O7m["docs"]); $l3v ++) { $lbx=$O7m["docs"][$l3v]; if ($l3v>0) l37(","); l74("","",1,l1k,"false"); } l37("]}"); } } else if (preg_match("/_msearch/i",$Obb)) { Oao($lap); $O7m=explode("\n",$lap); if (count($O7m)>1) { $O5k=$O7m[1]; lb9(l1x,$O5k); } } else if (preg_match("/_mapping\\/field\\//i",$Obb)) { $Obx=lbb($Obb,ESDIRNAME,"begin"); $O1=$Obx["object"]; l7w($O1); } else if (preg_match("/index-pattern\\/\$/i",$Obb)) { $Obx=lbb($Obb,ESDIRNAME,"begin"); $l31=$Obx["object"]; l74("index-pattern",$l31,1,l1k,"true"); } else if (preg_match("/index-pattern\\/_search/i",$Obb)) { O85(l1n,l1e,"*"); } else if (preg_match("/index-pattern/i",$Obb)) { $Obx=lbb($Obb,ESDIRNAME,"end"); $O1=$Obx["object"]; if ($lbw == "POST") { l74("index-pattern",$O1,1,l1k,"true"); } else if ($lbw == "DELETE") { O71(l1n,l1e,$O1); } } else if (preg_match("/_update\$/i",$Obb)) { lb9(O1w,$O7m["doc"]["defaultIndex"],$Ob9="raw"); } else if (preg_match("/(dashboard|search|visualization)\\/_search/i",$Obb,$l4j)) { assert(count($l4j)>=2,"Variable \$matches with the matched pattern has at least 1 element (found ".count($l4j).")"); $lby=$l4j[1]; assert(array_key_exists("query",$O7m),"Attribute 'query' exists in the request array"); if (array_key_exists("simple_query_string",$O7m["query"]) && array_key_exists("query",$O7m["query"]["simple_query_string"])) { $O5p=$O7m["query"]["simple_query_string"]["query"]; } else { $O5p="*"; } O85(l3,$lby,$O5p); } else if (preg_match("/\\/dashboard|\\/search|\\/visualization/i",$Obb,$l4j)) { assert(count($l4j)>=1,"Variable \$matches with the matched pattern has at least 1 element (found ".count($l4j).")"); $lby=substr($l4j[0],1); $Obx=lbb($Obb,ESDIRNAME,"end"); $O1=$Obx["object"]; if ($lbw == "POST") { $l81=$lap; O80($lby,$l81); } else if ($lbw == "GET") { $O1=Obi($O1); O7n($lby,$O1,$l7o=FALSE); } else if ($lbw == "DELETE") { $O1=Obi($O1); O71(l3,$lby,$O1); } } else if (preg_match("/\\/_search/i",$Obb,$l4j)) { $Oby=str_replace($l4j[0],"",$Obb); $Obx=lbb($Oby,ESDIRNAME,"end"); $O31=$Obx["object"]; if (count($O7m["query"]["ids"]["values"])>0) { $l7r=$O7m["query"]["ids"]["values"][0]; l7q($O31,$lap,$l7r); } } else if (preg_match("/_mget/i",$Obb)) { assert(array_key_exists("docs",$O7m),"Attribute 'docs' exists in the request array"); assert(count($O7m["docs"] == 1),"There is only one request in the request array"); if (array_key_exists(O1g,$O7m["docs"][0])) { $O1=$O7m["docs"][0][O1g]; } else { $O1=""; } if (array_key_exists(l1g,$O7m["docs"][0])) { $O55=$O7m["docs"][0][l1g]; switch ($O55) { case (O1d): lb5(); break; case (O4): case (O1e): case (l1f): O7n($O55,$O1); break; case (l1e): O7v($O1); break; default : break; } } } else { $lbf=Obf($Obb); $lbg=$lbf["URI"]; $lbz=str_replace("/".ESDIRNAME,"",$lbg); $lbz=str_replace(O13,"_kibana_4",$lbz); $lbz=preg_replace("/[\\/\\-\\.\\*]/","_",$lbz); if (function_exists( "kibella\\$lbz")) { call_user_func( "kibella\\$lbz"); } } ob_end_flush(); if (LOG) { fclose($O8e); } exit;