<?php
/*
JSON_SQL_Bridge 1.1
Copyright 2016 Frank Vanden berghen
All Right reserved.

JSON_SQL_Bridge is not a free software. The JSON_SQL_Bridge software is NOT licensed under the "Apache License". 
If you are interested in distributing, reselling, modifying, contibuting or in general creating 
any derivative work from JSON_SQL_Bridge, please contact Frank Vanden Berghen at frank@timi.eu.
*/
namespace kibella; use O4u\l4v\O4v\l4w\O4w; require_once ( __DIR__."/users/user.php"); function l4x($O1w,$l2e=FALSE) { if ($l2e) { switch ($O1w) { case (Om): $O4x="registered tables"; break; case (Oq): $O4x="saved objects"; break; case (Ot): $O4x="run queries"; break; default : break; } } $l2f=l2c(TABLESDIR,$l2e=$l2e,$O2e="The temporary directory with the application's information '".TABLESDIR."' was not found and is being recreated.\n"); if ($l2f === FALSE) { O2f( __FUNCTION__ ,l6,l4y().O4y()); return FALSE; } $l2f=l4z($O1w,KIBELLADB,TABLESDIR); if ($l2f === l8) { if ($l2e) O2f("",O5,"Internal database storing the application's information was not found and is being recreated.\n"); $l2f=O4z($l2e=FALSE); } else if ($l2f === O8) { if ($l2e) O2f("",O5,"The internal table storing the $O4x was not found and is being recreated.\n"); $l50=dbdbhcreate(KIBELLADB,$O2c=TABLESDIR,$l4l="sqlite"); $l2f=O50($l50,$O1w,FALSE); $l50->close(); unset ($l50); } return $l2f; } function l51($l40,$O1w,$l1w,$O2c,$O4l="sqlite") { $O51=l52($O1w,$l1w,$O2c,$O4l=$O4l); if ($O51 === FALSE) { return FALSE; } foreach ($O51 as $O4q) { if (l2l(strtolower($O4q["name"])) === strtolower($l40)) { return TRUE; } } return FALSE; } function l4z($O1w,$l1w,$O2c) { if (!file_exists( "$O2c/$l1w")) { return l8; } $O51=O4k( "select * from sqlite_master where type = 'table' and lower(name) = lower('$O1w')" ,$l1w,$O2c); if ($O51 === FALSE) { return FALSE; } if (count($O51) == 0) { return O8; } return TRUE; } function O52($l50,$O1w) { $O51=dbdbhexecutesqlquery($l50,"select * from sqlite_master where type = 'table' and name = '$O1w'"); if ($O51 === FALSE) { return FALSE; } if (count($O51) == 0) { return O8; } return TRUE; } function dbdbhcreate($l1w,$O2c="",$l4l="pdo",$l53=array("dbtype" => "sqlite","attributes" => array( \pdo::ATTR_PERSISTENT => true,\pdo::ATTR_STRINGIFY_FETCHES => false)),$O53=array("flags" => SQLITE3_OPEN_READWRITE)) { $l50=FALSE; if ($O2c === "") $l54=$l1w; else $l54= "$O2c/$l1w"; if (strtolower($l4l) === "sqlite") { assert($O53 !== NULL && count($O53)>=1 && array_key_exists("flags",$O53),"Input array \$optionsSQLite contains the minimum required attributes"); $O54=$O53["flags"]; try { $l50=new l55($l54,$O54=$O54); } catch ( \exception $O55) { O2f( __FUNCTION__ ,O6,$O55->getmessage()." '$l54'.\n"); } } else { assert($l53 !== NULL && count($l53)>=1 && array_key_exists("dbtype",$l53),"Input array \$optionsPDO contains the minimum required attributes"); $O4l=$l53["dbtype"]; if (array_key_exists("attributes",$l53)) { $l56=$l53["attributes"]; } else { $l56=NULL; } try { $l50=new \pdo( "$O4l:$l54"); if ($l56 != NULL) { foreach ($l56 as $O56 => $l26) { $l50->setattribute($O56,$l26); } } $l50->setattribute( \pdo::ATTR_ERRMODE,\pdo::ERRMODE_SILENT); } catch ( \l57 $O55) { O2f( __FUNCTION__ ,O6,$O55->getmessage()." '$l54' of type '$O4l'.\n"); } } return $l50; } function O57($l50,$O1w) { $l2f=O52($l50,$O1w); if ($l2f === TRUE) { dbdbhexecutesqlquery($l50,"drop table $O1w" ,$l4l="exec"); } return $l2f; } function dbdbhexecutesqlquery($l50,$l58,$l4l="query",$l23=NULL) { $O58=FALSE; if ($l4l == "exec") { try { if ($l23 != NULL) { $l59=@$l50->prepare($l58); foreach ($l23 as $O59 => $l26) { $l59->bindvalue($O59,$l26); } $O58=@$l59->execute(); unset ($l59); } else { $O58=@$l50->exec($l58); } } catch ( \l57 $O55) { } } else { $l59=@$l50->query($l58); if ($l59) { if (get_class($l59) == "PDOStatement") { $O58=$l59->fetchall( \pdo::FETCH_ASSOC); } else if (get_class($l59) == "SQLite3Result") { $O58=array(); while ($l5a=$l59->fetcharray(SQLITE3_ASSOC)) { $O58[]=$l5a; } } } unset ($l59); } return $O58; } function O5a($l5b,$l1w,$O1w,$O5b,$l5c,$O2c,$O4l="sqlite") { if (strtolower($O4l) != "sqlite") { return O7; } $l2f=l4z($O1w,$l1w,$O2c); if ($l2f === FALSE || $l2f<0) { return FALSE; } $O5c=l52($O1w,$l1w,$O2c,$O4l=$O4l); if ($O5c === FALSE) { return FALSE; } if (count($O5c) == 0) { return O8; } $l5d=""; $O5d=l2g($O5b); $l5e=l2g($l5c); $O40=""; $O5e=0; $l5f=$l5e; for ($O2h=0; $O2h<count($O5c); $O2h ++) { $O5f=$O5c[$O2h]["name"]; $l5g=$O5c[$O2h]["type"]; $O5g=l5h($O5f,$l5g,$O5d,$l5e,$l5f,$O4l=$O4l); $O5h=$O5g["FieldTypeIndex"]; if ($O5h !== "") { if ($O5e>0) $O40=","; $l5d.=$O40.dbgeneratefieldmetadatashort($O5f,$O5h); $O5e ++; } } if ($l5e != NULL) { l5i($l5d,$l5e,$O5c,"kibella\\dbGenerateFieldMetadataShort"); } $O5i="{\"docs\":[{\"".Oc."\":\"".l1."\",\"".ld."\":\"index-pattern\",\"".Od."\":\"".$l5b."\",\"".le."\":1,\"".lh."\":true,\"".lf."\":{\"title\":\"".$l5b."\","."\"fields\":".l2l($l5d,TRUE)."}"."}]"."}"; return $O5i; } function l5j($l5b,$l1w,$O1w,$O5b,$l5c,$O2c,$O4l="sqlite") { if (strtolower($O4l) != "sqlite") { return O7; } $l2f=l4z($O1w,$l1w,$O2c); if ($l2f === FALSE || $l2f<0) { return FALSE; } $O5c=l52($O1w,$l1w,$O2c,$O4l=$O4l); if ($O5c === FALSE) { return FALSE; } if (count($O5c) == 0) { return O8; } $O5j="{\"".$l5b."\":{"."\"mappings\":{"."\"row\":{"."\"_ttl\":{"."\"full_name\":\"_ttl\","."\"mapping\":{"."\"_ttl\":{"."\"enabled\":false,"."\"default\":-1"."}"."}"."}"; $O5d=l2g($O5b); $l5e=l2g($l5c); $O40=","; $l5f=$l5e; for ($O2h=0; $O2h<count($O5c); $O2h ++) { $O5f=$O5c[$O2h]["name"]; $l5g=$O5c[$O2h]["type"]; $O5g=l5h($O5f,$l5g,$O5d,$l5e,$l5f,$O4l=$O4l); $O5h=$O5g["FieldTypeMappings"]; if ($O5h !== "") { $O5j.=$O40.dbgeneratefieldmetadatalong($O5f,$O5h); } } if ($l5e != NULL) { l5i($O5j,$l5e,$O5c,"kibella\\dbGenerateFieldMetadataLong"); } $O5j.="}"."}"."}"."}"; return $O5j; } function l5k($O5k,$O3r,$l5b) { l4x($O5k,$l2e=FALSE); switch ($O3r) { case (lb): $l5l="where lower(".ll.") = '".strtolower($l5b)."'"; break; default : $l5l="where ".Ok." = '$O3r' and ".ll." = '".$l5b."'"; break; } $O51=O4k("select ".lm." from $O5k $l5l" ,KIBELLADB,TABLESDIR,$l4l="query",$O4l="sqlite"); if ($O51 !== FALSE && count($O51)>0) { $O5l="true"; $l5m=$O51[0][lm]*1; O4k( "delete from $O5k $l5l" ,KIBELLADB,TABLESDIR,$l4l="exec",$O4l="sqlite"); } else { $O5l="false"; $l5m=1; } if ($O3r == lb) { l4x(Oq,$l2e=FALSE); O4k("delete from ".Oq." where ".lr." = '$l5b'" ,KIBELLADB,TABLESDIR,$l4l="exec",$O4l="sqlite"); } O5m($O3r,$l5b,$l5m,lh,$O5l); } function l5n($O1w,$l1w,$O2c) { $l2f=l4z($O1w,$l1w,$O2c); if ($l2f === TRUE) { O4k( "drop table $O1w" ,$l1w,$O2c,$l4l="exec"); } return $l2f; } function O4k($l58,$l1w,$O2c,$l4l="query",$O4l="sqlite",$l23=NULL) { $O58=FALSE; $l54= "$O2c/$l1w"; try { $O5n=new \pdo( "$O4l:$l54"); if ($l4l == "exec") { try { if ($l23 != NULL) { $l5o=@$O5n->prepare($l58); foreach ($l23 as $O59 => $l26) { $l5o->bindvalue($O59,$l26); } $O58=$l5o->execute(); unset ($l5o); } else { $O58=@$O5n->exec($l58); } } catch ( \l57 $O55) { } } else { $l5o=@$O5n->query($l58); if ($l5o) { $O58=$l5o->fetchall( \pdo::FETCH_ASSOC); } unset ($l5o); } unset ($O5n); } catch ( \l57 $O55) { O2f( __FUNCTION__ ,O6,$O55->getmessage()." ".$l54."\n"); } return $O58; } function l5h($O5f,$O5h,&$O5d,&$l5e,$l5f,$O4l="sqlite") { $O5o=FALSE; if ($l5f !== NULL && count($l5f)>0) { $l5p="/_geohash[".Oh."-".Oi."]\$/i"; if (preg_match($l5p,$O5f) === 1 && array_search(preg_replace($l5p,"",strtolower($O5f)),$l5f) !== FALSE) { $O5p=""; $l5q=""; $O5o=TRUE; } } if (!$O5o) { $O5q=array_search(strtolower($O5f),$O5d); if ($O5q !== FALSE) { $O5p="date"; $l5q="date"; unset ($O5d[$O5q]); } else { $l5r=array_search(strtolower($O5f),$l5e); if ($l5r !== FALSE) { $O5p="geo_point"; $l5q="geo_point"; unset ($l5e[$l5r]); } else { switch (( string) strtoupper($O5h)) { case ("DOUBLE"): case ("FLOAT"): case ("REAL"): $O5p="number"; $l5q="double"; break; case ("INT"): $O5p="number"; $l5q="long"; break; case ("TEXT"): $O5p="string"; $l5q="string"; break; default : O5r($O5h,$O4l); $O5p="string"; $l5q="string"; break; } } } } return array("FieldTypeIndex" => $O5p,"FieldTypeMappings" => $l5q); } function dbgeneratefieldmetadatalong($O5f,$O5h) { $O20="\"".$O5f."\":{"."\"full_name\":\"".$O5f."\","."\"mapping\":{\"".$O5f."\":{"."\"type\":\"".$O5h."\","; if ($O5h === "date") { $O20.="\"analyzer\":\"_date/16\","."\"search_analyzer\":\"_date/max\","."\"format\":\"yyyy/MM/dd HH:mm:ss||yyyy/MM/dd||epoch_second\","."\"numeric_resolution\":\"seconds\","; } $O20.="\"index\":\"not_analyzed\""."}"."}"."}"; return $O20; } function dbgeneratefieldmetadatashort($O5f,$O5h) { return "{"."\"name\":\"".$O5f."\","."\"type\":\"".$O5h."\","."\"count\":0,"."\"scripted\":false,"."\"indexed\":true,"."\"analyzed\":false,"."\"doc_values\":true"."}"; } function l5i(&$O20,&$l5e,$l5s,$O5s) { assert($l5e != NULL,"the input geofields array is not null"); foreach ($l5e as $l5t) { $l5t=strtolower($l5t); $O5t=FALSE; $l5u=FALSE; $O5u=FALSE; foreach ($l5s as $O4q) { $O5f=$O4q["name"]; $l5v=strtolower($O5f); if ($l5v === $l5t."_lat") $O5t=TRUE; if ($l5v === $l5t."_lon") $l5u=TRUE; $O5v=$l5t."_geohash"; $l5w=substr($l5v,0,strlen($O5v)); $O5w=substr($l5v,strlen($O5v)); if ($l5w === $O5v && Oh<=$O5w && $O5w<=Oi) $O5u=TRUE; if ($O5t && $l5u && $O5u) break; } if ($O5t && $l5u && $O5u) { if ($O20 == "") $O40=""; else $O40=","; $l5x=substr($O5f,0,strlen($l5t)); $O20.=$O40.call_user_func($O5s,$l5x,"geo_point"); } unset ($l5e[$l5t]); } return $O20; } function O1x($O1w,$l1w) { return strtoupper(strstr($l1w,".",TRUE))."(".strtolower($O1w).")"; } function O5x() { $l5y=str_replace(":","_",$_SERVER["REMOTE_ADDR"]); return lj."_".$l5y."_".microtime(1)."_".rand(0,023420).".sqlite"; } function O5y($l5b) { $O5g=FALSE; $O5i=l5z($l5b); $O5z=json_decode($O5i,TRUE); if ($O5z != NULL && array_key_exists("docs",$O5z) && count($O5z["docs"])>0) { $l60=$O5z["docs"][0][lf]["fields"]; $O60=json_decode($l60,TRUE); $O5g=array(); foreach ($O60 as $l61) { $O5g["\"".$l61["name"]."\""]=$l61["type"]; } } return $O5g; } function l4o($l1x) { l4x(Oq,$l2e=FALSE); $O4n=O4k("select ".lr.", ".ll.", ".ls." from ".Oq." where ".Ok." = '".Oa."' and ".lr." = '".$l1x."'",KIBELLADB,TABLESDIR,$l4l="query",$O4l="sqlite"); if ($O4n == FALSE or count($O4n) == 0) { return FALSE; } return $O4n; } function l4t($l1x,$l4r=0) { l4x(Ot,$l2e=FALSE); $O4s=O4k("select ".lu.", ".lv.", ".Ov.", ".lw." from ".Ot." where ".lv." = '".$l1x."' and ".lw." >= $l4r"." order by ".lw." desc",KIBELLADB,TABLESDIR,$l4l="query",$O4l="sqlite"); if ($O4s == FALSE or count($O4s) == 0) { return FALSE; } return $O4s; } function O4p($l1x) { l4x(Ot,$l2e=FALSE); $O61=O4k("select ".lw.", count(*) as n "." from ".Ot." where ".lv." = '".$l1x."'"." group by ".lw." order by ".lw." desc",KIBELLADB,TABLESDIR,$l4l="query",$O4l="sqlite"); if ($O61 === FALSE or count($O61) == 0) { return FALSE; } return $O61; } function l4i($l1x) { l4x(Om,$l2e=FALSE); $l62=O4k("select ".On.", ".ln.", ".lq." from ".Om." where ".ll." = '$l1x'" ,KIBELLADB,TABLESDIR); if ($l62 == FALSE or count($l62) == 0) { return FALSE; } $l1w=$l62[0][On]; $O1w=$l62[0][ln]; $O62=strtolower(CACHEMODE) !== "none" && ($l62[0][lq] == 1); $l63=array("table" => $O1w,"db" => $l1w,"cache" => $O62); return $l63; } function l5z($l1x) { l4x(Om,$l2e=FALSE); $O51=O4k("select ".ln.", ".On.", ".lo.", ".Oo.", ".lp.", ".Op." from ".Om." where lower(".ll.") = '".strtolower($l1x)."'",KIBELLADB,TABLESDIR,$l4l="query",$O4l="sqlite"); if ($O51 !== FALSE && count($O51)>0) { $O1w=$O51[0][ln]; $l1w=$O51[0][On]; $O4l=$O51[0][lo]; $O5b=$O51[0][Oo]; $l5c=$O51[0][lp]; $O63=$O51[0][Op]; $O5i=O5a($l1x,$l1w,$O1w,$O5b,$l5c,DATADIR,$O4l=$O4l); } else { $O5i=FALSE; } return $O5i; } function l64($l5b) { l4x(Om,$l2e=FALSE); $O51=O4k("select ".ln.", ".On.", ".lo.", ".Oo.", ".lp.", ".Op." from ".Om." where lower(".ll.") = '".strtolower($l5b)."'",KIBELLADB,TABLESDIR,$l4l="query",$O4l="sqlite"); if ($O51 !== FALSE && count($O51)>0) { $O1w=$O51[0][ln]; $l1w=$O51[0][On]; $O4l=$O51[0][lo]; $O5b=$O51[0][Oo]; $l5c=$O51[0][lp]; $O63=$O51[0][Op]; $O5j=l5j($l5b,$l1w,$O1w,$O5b,$l5c,DATADIR,$O4l=$O4l); } else { $O5j=FALSE; } return $O5j; } function l52($O1w,$l1w,$O2c,$O4l="sqlite") { if ($O4l == "sqlite") { return O4k( "PRAGMA table_info('$O1w')" ,$l1w,$O2c,$l4l="query",$O4l=$O4l); } else { O2f( __FUNCTION__ ,O6,O64($O4l)); } } function l65($O65) { $l66=json_decode($O65["kibanaSavedObjectMeta"]["searchSourceJSON"],TRUE); return $l66["index"]; } function O66($O3r,$l5b,$l67=TRUE) { l4x(Oq,$l2e=FALSE); $O67=O4k("select * from ".Oq." where ".Ok." = '".$O3r."' and ".ll." = '".$l5b."'",KIBELLADB,TABLESDIR,$l4l="query",$O4l="sqlite"); if ($O67 === FALSE) { echo O6." when reading from Objects table '".Oq."'. ".l7.".\n"; } else { if (count($O67) == 0) { $l68="{\"".Oc."\":\"".l1."\",\"".ld."\":\"".$O3r."\",\"".Od."\":\"".$l5b."\",\"".lh."\":false"."}"; if ($l67) { $l68="{\"docs\":[".$l68."]}"; } } else { $l68="{\"".Oc."\":\"".$O67[0][lk]."\",\"".ld."\":\"".$O67[0][Ok]."\",\"".Od."\":\"".$O67[0][ll]."\",\"".le."\":".$O67[0][lm]*1 .",\"".lh."\":true,\"".lf."\":".$O67[0][ls]; $O68=$O67[0][Of]; if ($O68) $l68.=",\"".Of."\":".$O68; $l68.="}"; if ($l67) { $l68="{\"docs\":[".$l68."]}"; } } l20($l68); } } function l69($l1x,$O69,$l6a) { $l63=l4i($l1x); $O1w=$l63["table"]; $l1w=$l63["db"]; $O4h=$l63["cache"]; $O6a=l6b($l1x,$O69); $O6b=l6c($O6a,$O4h); if ($O6b === FALSE) { $O6c["xaggs"]=array(); $O6c["yaggs"]=array(); $O6c["filter"]= "where rowid = $l6a"; $O6c["discover"]=array("tab" => TRUE,"limit" => O3e(1)); l6d($O1w,$l1w,$O6c,$O6a["responseFileTmp"]); O6d($O6a,$O4h); } l6e($O6a["responseFile"]); } function O6e($l5b) { $O5i=l5z($l5b); if ($O5i !== FALSE) { $O3u=$O5i; } else { $O1w=lz; $l1w=ly; $l5b=O1x($O1w,$l1w); $O3u="{\"docs\":[{\"".Oc."\":\"".l1."\",\"".ld."\":\"index-pattern\",\"".Od."\":\"".$l5b."\",\"".le."\":1,\"".lh."\":true,\"".lf."\":{\"title\":\"".$l5b."\","."\"fields\":\"[{}]\""."}"."}]"."}"; } l20($O3u); } function l6f($l5b) { $O5j=l64($l5b); if ($O5j !== FALSE) { $O3u=$O5j; } else { $O1w=lz; $l1w=ly; $l5b=O1x($O1w,$l1w); $O5f="_dummy"; $O5h="string"; $O3u="{\"".$l5b."\":{"."\"mappings\":{"."\"row\":{"."\"_ttl\":{"."\"full_name\":\"_ttl\","."\"mapping\":{"."\"_ttl\":{"."\"enabled\":false,"."\"default\":-1"."}"."}"."},\"".$O5f."\":{"."\"full_name\":\"".$O5f."\","."\"mapping\":{\"".$O5f."\":{"."\"type\":\"".$O5h."\","."\"index\":\"not_analyzed\""."}"."}"."}"."}"."}"."}"."}"; } l20($O3u); } function O6f($l50,$l58) { $l59=FALSE; if ($l50 !== FALSE) { $l59=@$l50->query($l58); } return $l59; } function l6g($l59,$O6g=0) { $O58=FALSE; if ($l59) { if (get_class($l59) == "PDOStatement") { $O58=$l59->fetch( \pdo::FETCH_ASSOC); } else if (get_class($l59) == "SQLite3Result") { $O58=$l59->fetcharray(SQLITE3_ASSOC); } } return $O58; } function l6h($l1x,$l47,$O4t) { $l2f=l4x(Ot,$l2e=FALSE); $O51=O4k("select ".lu.", ".lw." from ".Ot." where ".lu." = '".$O4t."'"." and ".lv." = '$l1x'" ,KIBELLADB,TABLESDIR,$l4l="query",$O4l="sqlite"); $l2j=strftime("%Y/%m/%d %H:%M:%S",time()); if (count($O51) == 0) { $O6h="true"; $l4u=1; $O58=O4k("insert into ".Ot." values(\t'$O4t',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'$l1x',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'$l47',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t$l4u,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'$l2j'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)" ,KIBELLADB,TABLESDIR,$l4l="exec",$O4l="sqlite"); } else { $l4u=$O51[0][lw]+1; $O58=O4k("update ".Ot." set ".lu." = '$O4t', ".lv." = '$l1x', ".Ov." = '$l47', ".lw." = $l4u, ".Ou." = '$l2j'"." where ".lu." = '$O4t'" ,KIBELLADB,TABLESDIR,$l4l="exec",$O4l="sqlite"); } } function l6i($l63) { $O6i=new user(); if (PHP_SAPI !== "cli" && !$O6i->isloggedin()) return FALSE; extract($l63); if ($l1w == "") { O2f("","note",l6j("Database")); } if ($O1w == "") { O2f("","note",l6j("Table")); } if ($l1w == "" || $O1w == "") { return FALSE; } assert($O4l != "","The database type is not empty."); $l2f=l4z($O1w,$l1w,DATADIR); if ($l2f === FALSE || $l2f<0) { $l5b=""; } else { $l2f=FALSE; $l1w=basename(realpath(DATADIR."/$l1w")); $l5b=O1x($O1w,$l1w); $l2f=l4x(Om,$l2e=TRUE); if ($l2f === FALSE) { return array("id" => $l5b,"rc" => FALSE); } $l2f=FALSE; $O51=O4k("select ".lm." from ".Om." where lower(".ll.") = '".strtolower($l5b)."'",KIBELLADB,TABLESDIR,$l4l="query",$O4l="sqlite"); if ($O51 === FALSE) { $l2f=FALSE; } else if (count($O51) == 0) { $l5m=1; $O58=O4k("insert into ".Om." (".ll.",".ln.",".On.",".lo.",".lm.",".Oo.",".lp.",".Op.",".lq.")"." values(\t'$l5b',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'$O1w',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'$l1w',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'$O4l',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t $l5m,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'$O5b',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'$l5c',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'$O63',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'$O6j'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)" ,KIBELLADB,TABLESDIR,$l4l="exec",$O4l="sqlite"); if ($O58 !== FALSE) $l2f=l9; } else { $l5m=$O51[0][lm]+1; $O58=O4k("update ".Om." set ".ln." = '$O1w', ".On." = '$l1w', ".lo." = '$O4l', ".lm." =  $l5m, ".Oo." = '$O5b', ".lp." = '$l5c', ".Op." = '$O63', ".lq." = $O6j"." where lower(".ll.") = '".strtolower($l5b)."'",KIBELLADB,TABLESDIR,$l4l="exec",$O4l="sqlite"); if ($O58 !== FALSE) $l2f=O9; } } return array("id" => $l5b,"rc" => $l2f); } function O4z($l2e=FALSE) { $l2f=TRUE; $l50=dbdbhcreate(KIBELLADB,$O2c=TABLESDIR,$l4l="sqlite"); if ($l50 === FALSE) { return FALSE; } $l6k=array(Om,Oq,Ot); $l2f=TRUE; foreach ($l6k as $O1w) { $l2f=$l2f && O50($l50,$O1w,$l2e=$l2e); } $l50->close(); unset ($l50); return $l2f; } function O50($l50,$O1w,$l2e=FALSE) { assert($l50 !== NULL && $l50 != FALSE,"The database handle is not null nor false"); $l2f=O57($l50,$O1w); if ($l2f === FALSE) { O2f( __FUNCTION__ ,O5,O6k($O1w)); } else { switch ($O1w) { case (Om): $l6l=ll." TEXT, ".ln." TEXT, ".On." TEXT, ".lo." TEXT, ".lm." INT, ".Oo." TEXT, ".lp." TEXT, ".Op." TEXT, ".lq." NUMBER".",imageFields TEXT".",linkTemplate TEXT".",linkTemplateLabel TEXT".",imageTemplate TEXT".",imageTemplateLabel TEXT".", PRIMARY KEY(".ll.")"; $O6l="Registered tables"; break; case (Oq): $l6l=lr." TEXT, ".lk." TEXT, ".Ok." TEXT, ".ll." TEXT, ".lm." INT, ".ls." TEXT, ".Os." TEXT, ".lt." INT"; $O6l="Saved objects (visualizations, dashboards, searches)"; break; case (Ot): $l6l=lu." TEXT, ".lv." TEXT, ".Ov." TEXT, ".lw." INT, ".Ou." TEXT"; $O6l="Run queries"; break; default : $l6l=""; $O6l=""; break; } $l2f=dbdbhexecutesqlquery($l50,"create table ".$O1w." ($l6l)" ,$l4l="exec"); if ($l2f === FALSE) { O2f( __FUNCTION__ ,l6,l6m($O1w)); } else if ($l2e) { echo O6m($O6l); } } return $l2f; } function l6n($O3r,$O6n) { $O6i=new user(); if (PHP_SAPI !== "cli" && !$O6i->isloggedin()) return FALSE; $l6o=json_decode($O6n,TRUE); switch ($O3r) { case (Ob): case (lc): $l1x=l65($l6o); $l47=O6o(Ox); break; case (Oa): $l1x=O6o(lx); $l47=""; break; default : $l1x=""; $l47=""; break; } $l2f=l4x(Oq,$l2e=FALSE); if (ADDTABLEPREFIX == 1) { $l6p= "$l1x: "; $O6p=strpos($O6n,$l6p); if ($O6p === strlen("{\"title\":\"")) { $O6n=substr_replace($O6n,"",$O6p,strlen($l6p)); } } else { $l6p=""; } $l6q="\"title\":\"([^\"]+)\""; $O6n=preg_replace( "/$l6q/" ,"\"title\":\"".$l6p."\$1\"",$O6n); preg_match( "/$l6q/" ,$O6n,$l32); if (count($l32)>1) { $O6q=$l32[1]; $l6r=O6r($O6q); } else { $l6r=""; } $O51=O4k("select ".ll.", ".lm." from ".Oq." where ".Ok." = '$O3r' and ".ll." = '".$l6r."'",KIBELLADB,TABLESDIR,$l4l="query",$O4l="sqlite"); if (count($O51) == 0) { $O6h="true"; $l5m=1; $O58=O4k("insert into ".Oq." values(\t'$l1x',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'".l1."',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'$O3r',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'$l6r',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t$l5m,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'$O6n',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'$l47', ".Ow.")",KIBELLADB,TABLESDIR,$l4l="exec",$O4l="sqlite"); } else { $O6h="false"; $l5m=$O51[0][lm]+1; $O58=O4k("update ".Oq." set ".lr." = '$l1x', ".lk." = '".l1."', ".Ok." = '$O3r', ".ll." = '$l6r', ".lm." = $l5m, ".ls." = '$O6n', ".Os." = '$l47'"." where ".ll." = '$l6r'" ,KIBELLADB,TABLESDIR,$l4l="exec",$O4l="sqlite"); } O5m($O3r,$l6r,$l5m,Og,$O6h); } function l6s($O5k,$O3r,$O4b) { l4x($O5k,$l2e=FALSE); switch ($O3r) { case (Oa): case (Ob): case (lc): $O6s=lk; $l6t=Ok; $O6t=ll; $l6u=ls; $l5l= "where $l6t = '$O3r'"; $O1w=O6o(lx); if ($O1w !== "") { $l5l.=" and ".lr." = '$O1w'"; } if ($O4b != "*") { $O4b=str_replace(" ","-",$O4b); $l5l.= " and lower($O6t) GLOB lower('*".$O4b."')"; } $O44=O4k( "select $O6s, $l6t, $O6t, $l6u\n\t\t\t\t\t\t\t\t\t\t\tfrom $O5k\n\t\t\t\t\t\t\t\t\t\t\t$l5l\n\t\t\t\t\t\t\t\t\t\t\torder by $O6t" ,KIBELLADB,TABLESDIR,$l4l="query",$O4l="sqlite"); break; case (lb): $O6t=ll; $l6u=lm; $O44=O4k( "select $O6t, $l6u\n\t\t\t\t\t\t\t\t\t\t\tfrom $O5k\n\t\t\t\t\t\t\t\t\t\t\torder by $O6t" ,KIBELLADB,TABLESDIR,$l4l="query",$O4l="sqlite"); break; default : O2f( __FUNCTION__ ,O6,"Invalid object type ($O3r). ".l7.".\n"); break; } if ($O44 === FALSE) { O2f( __FUNCTION__ ,O6,"when reading from table '$O5k'. ".l7.".\n"); } else { if ($O3r == Oa || $O3r == Ob || $O3r == lc) { for ($O2h=0; $O2h<count($O44); $O2h ++) { $O44[$O2h][$l6u]=json_decode($O44[$O2h][$l6u],TRUE); } } else if ($O3r == lb) { for ($O2h=0; $O2h<count($O44); $O2h ++) { $O44[$O2h][lk]=l1; $O44[$O2h][Ok]=lb; $O44[$O2h][$l6u]=$O44[$O2h][$l6u]*1; } } O6u($O44); } }