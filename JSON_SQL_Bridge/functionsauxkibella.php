<?php
/*
JSON_SQL_Bridge 1.0
Copyright 2016 Frank Vanden berghen
All Right reserved.

JSON_SQL_Bridge is not a free software. The JSON_SQL_Bridge software is NOT licensed under the "Apache License". 
If you are interested in distributing, reselling, modifying, contibuting or in general creating 
any derivative work from JSON_SQL_Bridge, please contact Frank Vanden Berghen at frank@timi.eu.
*/
namespace kibella; require_once "functionsaux.php"; function O46($l38,$l47) { if (!is_array($l38) || count($l38) == 0) { user_error( "The input parameter is not an array or is empty ($l38)\n" ,E_USER_ERROR); return NULL; } else if ($l47<0 || $l47>=count($l38)) { error( "The index to extract from the array is out of range ($l47 while size of array is count($l38))\n" ,E_USER_ERROR); return NULL; } return $l38[$l47]; } function O47($l48) { $O48=strtotime($l48)-strtotime("00:00"); $l49=time()-strtotime("00:00"); if ($O48<=$l49) { $O49=strtotime($l48); } else { $O49=strtotime($l48)-0250600; } return $O49; } function l4a($O4a) { global $l4b; $O4b=array_search($O4a,$l4b); assert($O4b !== FALSE,"The database engine name is valid: $O4b\n"); return $O4b; } function l4c($O4b) { if ($O4b == NULL) { return NULL; } O4c($O4b); global $l4b; return $l4b[$O4b]; } function l4d($O4d) { $date=date_create(strftime("%Y-%m-%d %H:%M:%S",$O4d)); $l4e=(array) $date; $O4e=timezone_offset_get(new \datetimezone($date->timezone),$date); return $O4d-$O4e; } function l4f($O4f,$timezone="UTC") { $l4g=array("s" => "second","m" => "minute","h" => "hour","d" => "day","w" => "week","M" => "month","y" => "year"); $O4g="/^((now)|([\\d\\/-:\\s]+)\\|\\|)([-+])(\\d+)([smhdwMy]{1})\\w*\\/*([smhdwMy])*/"; preg_match($O4g,$O4f,$l4h); if (count($l4h)>0) { assert(count($l4h)>=7,"The preg_match() array has at least 7 elements"); $date=date_create($l4h[2].$l4h[3]); if ($timezone !== NULL && $l4h[2] !== "now") { $date=date_create(strftime("%Y-%m-%d %H:%M:%S",date_timestamp_get($date)),new \datetimezone($timezone)); } $O4h=$l4h[4].$l4h[5]; $l4i=$l4h[6]; date_modify($date,"$O4h ".$l4g[$l4i]); $l4e=(array) $date; if (count($l4h)>=8) { $O4i=$l4h[7]; l4j($date,$O4i); } } else { if ($timezone !== NULL) { $date=date_create($O4f); $date=date_create(strftime("%Y-%m-%d %H:%M:%S",date_timestamp_get($date)),new \datetimezone($timezone)); } else { $date=date_create($O4f); } } return date_timestamp_get($date); } function l4j(&$O4j,$O4i) { switch ($O4i) { case ("s"): date_modify($O4j,strftime("%Y-%m-%d %H:%M:%S",strtotime($O4j->date))); break; case ("m"): date_modify($O4j,strftime("%Y-%m-%d %H:%M",strtotime($O4j->date)).":00"); break; case ("h"): date_modify($O4j,strftime("%Y-%m-%d %H",strtotime($O4j->date)).":00:00"); break; case ("d"): date_modify($O4j,strftime("%Y-%m-%d",strtotime($O4j->date))." 00:00:00"); break; case ("w"): date_modify($O4j,"last monday"); $l4e=(array) $O4j; date_modify($O4j,strftime("%Y-%m-%d",strtotime($O4j->date))." 00:00:00"); break; case ("M"): date_modify($O4j,"first day of this month"); $l4e=(array) $O4j; date_modify($O4j,strftime("%Y-%m-%d",strtotime($O4j->date))." 00:00:00"); break; case ("y"): date_modify($O4j,strftime("%Y",strtotime($O4j->date))."-01-01 00:00:00"); break; default : break; } $l4e=(array) $O4j; } function l4k($O4k) { $l4l=preg_grep("/^\\-/",array($O4k)); $O4l=count($l4l)>0; if ($O4l) $O4k=substr($O4k,1); $l4m=explode("-",$O4k,2); $O4m=$l4m[0]; if ($O4l) $O4m="-".$O4m; $l4n=""; if (count($l4m)>1) { $l4n=$l4m[1]; } return array($O4m,$l4n); } function O4n($Oe) { $l36=FALSE; $l4o=filemtime($Oe); if (strtolower(CACHEMODE) === CACHEMODE_DAY) { $l48=CACHEDAYCHANGE; $O49=O47($l48); if ($l4o<$O49) { $l36=TRUE; } } else if (time()-$l4o>CACHEHOURS*07020) { $l36=TRUE; } return $l36; } function O4o($lp,$l4p,$O30) { global $O4p; return $O4p[$l4p][$lp].$O4p[$l4p][O1a]."'$O30'".$O4p[$l4p][l1b]; } function l4q($lp) { global $O4q; return $O4q[$lp] === O17; } function l4r($O4r,$l4s) { switch (( string) $O4r) { case (l23): $O4r=O23; break; case (O26): if ($l4s == O25) $O4r=O2d; break; case (O2g): if ($l4s == l24) $O4r=O24; else $O4r=l2a; break; default : break; } return $O4r; } function O4s($l4t,$O4t) { if ($l4t == $O4t) $l4u=""; else $l4u=","; return $l4u; } function O4u($l3c,$lp,$l4v) { $O4v=""; if ($l3c>0) { switch ($lp) { case (O18): if ($l4v === 1) $O4v= "LIMIT $l3c"; break; case (l19): if ($l4v === 0) $O4v= "TOP $l3c"; break; default : break; } } return $O4v; }