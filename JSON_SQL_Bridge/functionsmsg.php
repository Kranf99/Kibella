<?php
/*
JSON_SQL_Bridge
Copyright 2016 Frank Vanden berghen
All Right reserved.

JSON_SQL_Bridge is not a free software. The JSON_SQL_Bridge software is NOT licensed under the "Apache License". 
If you are interested in distributing, reselling, modifying, contibuting or in general creating 
any derivative work from JSON_SQL_Bridge, please contact Frank Vanden Berghen at frank@timi.eu.
*/
namespace kibella; require_once __DIR__."/constants.php"; require_once __DIR__."/globals.php"; function showwarninginvalidkeyword($O55,$O8c,$l8d,$l3r,$O8d=0) { if (DEBUG && l8e($O8c,$l8d) && array_search($O55,$l8d[$O8c]) == FALSE) { if ($O8d == 0) { echo "WARNING: (".strtoupper($l3r)."): Invalid keyword '$O55' for context '$O8c'!\n"; } if ($O8d == 1) { echo "WARNING: (".strtoupper($l3r)."): Invalid keyword '$O55' for context '$O8c'! Previous context is maintained.\n"; } else if ($O8d == 2) { echo "WARNING: (".strtoupper($l3r)."): Invalid keyword '$O55' for context '$O8c'! The process may generate unexpected results.\n"; } } } function showwarninginvalidcontext($O8c,$l3r) { if (DEBUG) { echo "WARNING: (".strtoupper($l3r)."): Invalid context '$O8c'!\n"; } } function showwarninginvalidfieldtype($Oj) { if (DEBUG) { echo "WARNING: Invalid metadata type ('$Oj') for the currently used database!\n"; echo "         Field type set to STRING.\n"; } } function showwarninginvalidaggregationtype($Oj) { if (DEBUG) { echo "WARNING: Invalid aggregation type ('$Oj'). No action will be taken on the aggregation type.\n"; } } function msgerrorexternaldircreate($l47) { return "Could not create directory '$l47'.\n"; } function msgerrorexternalenteravalue($O8e) { return "Please specify a value for the '$O8e' field.\n"; } function msgerrorexternalinvaliddatabasetype($le) { global $l8f; return "Invalid database engine ('$le').\nValid ones are: ".implode("' , '",$l8f)."'\n"; } function msgerrorinternaltablesdircouldnotcreate() { return "An error occurred when attempting to create the temporary directory '".TABLESDIR."' with the application's information.\n"; } function msgerrorinternaltablecreate($la) { return "Could not create table '$la' in the application's database.\n"; } function msgerrorinternaltabledrop($la) { return "Could not drop table '$la' from the application's database.\n"; } function msgerrorexternaldatabasenotfound($Oa) { return "Database '$Oa' does not exist.\nTry again going back to the previous page.\n"; } function msgerrorexternaltablenotfound($la,$Oa) { if ($la == "") { return "Please specify a table name.\nTry again going back to the previous page.\n"; } else if ($Oa == "") { return "Please specify the database where the table '$la' resides.\nTry again going back to the previous page.\n"; } else return "Table '$la' was not found in database '$Oa'.\nTry again going back to the previous page.\n"; } function msgerrorinternalreturncode($lg) { return "Unknown return code ($lg).\n"; } function msgerrorinternaltablesdir() { return "An internal error occurred.\nCheck existence and permissions of '".TABLESDIR."' directory in the web server.\n"; } function msgnotecheckuserpermissions() { return "Check user permissions and try again.\n"; } function msgnotesuccessfullydeleted($O8f) { return "<p>$O8f successfully deleted.</p>"; } function msgnotetableregistrationadded($la,$Oa,$O1,$ld) { $l8g=$ld == 1 ? "ENABLED": "DISABLED"; return "Table '$la' in database '$Oa' successfully registered with ID '$O1'.\nCache is $l8g.\n"; } function msgnotetableregistrationupdated($la,$Oa,$O1,$ld) { $l8g=$ld == 1 ? "ENABLED": "DISABLED"; return "The registration information for table '$la' in database '$Oa' with ID '$O1' has been successfully updated.\nCache is $l8g.\n"; } function showmessage($O8g,$Oj,$l8h) { global $O8h; if ($O8g !== "") $O8g= "($O8g) "; if ($O8h) { fwrite($O8h,strftime("%Y/%m/%d:%H:%M:%S",time())." ".strtoupper($Oj).": $O8g $l8h"); } else { echo "\n<pre>".strtoupper($Oj).": $O8g $l8h</pre>\n"; } } function showarray($l3p) { global $O8h; if ($O8h) { $l3o=print_r($l3p,TRUE); fwrite($O8h,$l3o); } else { print_r($l3p); } }