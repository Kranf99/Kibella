<?php
/*
 JSON_SQL_Bridge
 Copyright 2016 Frank Vanden berghen
 All Right reserved.

 JSON_SQL_Bridge is not a free software. The JSON_SQL_Bridge software is NOT licensed under the "Apache License".
 If you are interested in distributing, reselling, modifying, contibuting or in general creating
 any derivative work from JSON_SQL_Bridge, please contact Frank Vanden Berghen at frank@timi.eu.
 */
namespace kibella; require_once __DIR__."/constants.php"; require_once __DIR__."/globals.php"; require_once __DIR__."/functionsaux.php"; require_once __DIR__."/functionsdb.php"; require_once __DIR__."/functionsmsg.php"; require_once __DIR__."/functionsquery.php"; function l5e($l3t,&$O5e) { if (array_search($l3t,$O5e["values"]) === FALSE) { $O5e["values"][]=$l3t; } } function l5f($O5f,$Oh,$l5g,$l3r,&$O5g,&$l5h) { $O5h=array_keys($Oh); $l5i=count($Oh); if ($l3r+1<$l5i) $O5i=TRUE; else $O5i=FALSE; if ($O5i) $l5j=$O5h[$l3r+1]; $Oj=$Oh[$O5f]["type"]; $O5j=$Oh[$O5f]["ifield"]; $l5k=$Oh[$O5f]["interval"]; if (array_key_exists($O5j,$O5g) === FALSE) { $O5g[$O5j]=array("type" => $Oj,"values" => array(),"interval" => $l5k); } switch ($Oj) { case ("h"): case ("hd"): case ("t"): foreach ($l5g as $O5k) { $l3t=$O5k["key"]; if ($Oj == "hd") { $l3t=$l3t/01750; } if ($O5i) { $l5h[$l3t]=array(); if (array_key_exists($l5j,$O5k)) { $l5l=$O5k[$l5j][l2q]; l5f($l5j,$Oh,$l5l,$l3r+1,$O5g,$l5h[$l3t]); } } else { $l5h[]=$l3t; } l5e($l3t,$O5g[$O5j]); } break; case ("r"): case ("rd"): foreach ($l5g as $l3t => $O5k) { if ($O5i) { $l5h[$l3t]=array(); if (array_key_exists($l5j,$O5k)) { $l5l=$O5k[$l5j][l2q]; l5f($l5j,$Oh,$l5l,$l3r+1,$O5g,$l5h[$l3t]); } } else { $l5h[]=$l3t; } l5e($l3t,$O5g[$O5j]); } break; default : break; } } function O5l($l5m,$O5m) { $l5n=array(); $O5g=array(); $l5h=array(); $O5n=json_decode($l5m,TRUE); assert(array_key_exists("xaggs",$O5m),"The parsed query array contains the attribute 'xaggs'"); $l5o=$O5m["xaggs"]; $O5h=array(); foreach ($l5o as $O5o) { assert(array_key_exists("ofield",$O5o),"The array with the aggregation info contains the attribute 'ofield'"); assert(array_key_exists("type",$O5o),"The array with the aggregation info contains the attribute 'type'"); $O5h[]=$O5o["ofield"]; if ($O5o["type"] == "h" || $O5o["type"] == "hd") { assert(array_key_exists("interval",$O5o),"The array with the aggregation info contains the attribute 'interval'"); $l5k=$O5o["interval"]; } else { $l5k=NULL; } assert(array_key_exists("ifieldname",$O5o),"The array with the aggregation info contains the attribute 'ifieldname'"); $l5n[$O5o["ofield"]]=array("type" => $O5o["type"],"ifield" => $O5o["ifieldname"],"interval" => $l5k); } if (array_key_exists(l2n,$O5n)) { $l5p=$O5n[l2n]; $l3r=-1; $O5f=$O5h[0]; $l5g=$l5p[$O5f][l2q]; l5f($O5f,$l5n,$l5g,$l3r+1,$O5g,$l5h); } $O5p=count($l5h); if (0<$O5p && $O5p<=ACCELERATEMAX) { if (DEBUG) { showmessage( __FUNCTION__ ,"note","Multi-level filter values\n"); showarray($l5h); } return array("Fields and Values" => $O5g,"Multilevel Values" => $l5h); } else { return FALSE; } } function l5q(&$O5q,$lj,$Oj,$l5k,$l3t,$l5r="") { global $O5r; switch ($Oj) { case ("t"): $O5q.=$l5r."{"."\"query\":{"."\"match\":{".$lj.":{"."\"query\":\"".$l3t."\","."\"type\":\"phrase\""."}"."}"."}"."}"; break; case ("h"): case ("hd"): if ($Oj == "hd") { $l5s=$l3t*01750; } else { $l5s=$l3t; } $O5q.=$l5r."{"."\"range\":{".$lj.":{"."\"gte\":".$l5s.","; if ($Oj == "h") { assert(is_numeric($l5k),"The histogram interval (bin size) is a number or numeric string"); $O5s=$l5s+$l5k; $O5q.="\"lt\":".$O5s; } else { $O4v=max(1,round(substr($l5k,0,strlen($l5k)-1)))*1; $l4w=substr($l5k,strlen($l5k)-1); $l5t=date_create(gmstrftime("%Y-%m-%d %H:%M:%S",$l5s/01750),new \datetimezone("UTC")); $O5t=(array) $l5t; date_modify($l5t,"$O4v ".$O5r[$l4w]); $O5t=(array) $l5t; $O5s=date_timestamp_get($l5t); $O5q.="\"lte\":".($O5s*01750-1); } $O5q.="}"."}"."}"; break; case ("r"): case ("rd"): $l5u=l4y($l3t); $l5s=$l5u[0]; $O5s=$l5u[1]; $O5q.=$l5r."{"."\"range\":{".$lj.":{"."\"gte\":".$l5s.","."\"lt\":".$O5s."}"."}"."}"; break; default : break; } } function O5u($l5v,$O5q) { $O5v=FALSE; if ($O5q != NULL && trim($O5q) !== "") { $O5v=TRUE; $l5w=json_decode($O5q,TRUE); } foreach ($l5v["objects"] as $O5w) { $l5x=$O5w["id"]; $l3k=$O5w["tableid"]; $O5x=$O5w["query"]; if ($O5x != NULL) { if ($O5v === TRUE) { $l5y=json_decode($O5x,TRUE); if (array_key_exists("query",$l5y)) { $l5y["query"]=$l5w; } $O5x=json_encode($l5y); } $O5y=l5z($l3k,$O5x); $O5z=l1j($O5y); } if (DEBUG) showmessage( __FUNCTION__ ,"note","\t\t*********** FILTER QUERY for object $l5x **************\n\t\t$O5x\n"); } } function l60($l5v,$O60) { if (DEBUG) { showmessage( __FUNCTION__ ,"note","Objects in dashboard to be accelerated:\n"); showarray($l5v); showmessage( __FUNCTION__ ,"note","Filters to apply:\n"); showarray($O60); } O5u($l5v,""); $l61="{"."\"filtered\":{"."\"query\":{"."\"query_string\":{"."\"query\":\"*\","."\"analyze_wildcard\":true"."}"."},"."\"filter\":{"."\"bool\":{"."\"must\":["; $O61=",{"."\"query\":{"."\"query_string\":{"."\"analyze_wildcard\":true,"."\"query\":\"*\""."}"."}"."}"."],"."\"must_not\":[]"."}"."}"."}"."}"; foreach ($O60 as $l62 => $O62) { $l63=array(); foreach ($O62["Fields and Values"] as $lj => $O63) { $Oj=$O63["type"]; $l5k=$O63["interval"]; $l63[]=array("field" => $lj,"type" => $Oj,"interval" => $l5k); foreach ($O63["values"] as $l3t) { $O5q=$l61; l5q($O5q,$lj,$Oj,$l5k,$l3t); $O5q.=$O61; O5u($l5v,$O5q); } } $l64=count($l63); if ($l64>1) { O3o($O62["Multilevel Values"],"kibella\\dashAddMultiLevelFilterAndAccelerateObjects",array($l5v,$l63,$l61,$O61)); } } } function dashaddmultilevelfilterandaccelerateobjects($l3t,$O3s,$O3q,$l3r,$O3r,$l3q) { static $O64; static $l65; static $O65; static $l66; static $O66; assert(count($l3q) == 4,"The parameters array has exactly 4 elements"); if ($O3q == 0 && $l3r == 0) { $O64=$l3q[0]; $l65=$l3q[1]; $l66=$l3q[2]; $O65=array($l66); $O66=$l3q[3]; } assert(count($l65)>$l3r,"The number of elements in the aFieldsInfo array is larger than the current level (numel=".count($l65)."), level=$l3r)"); $lj=$l65[$l3r]["field"]; $Oj=$l65[$l3r]["type"]; $l5k=$l65[$l3r]["interval"]; if (is_array($l3t)) { $l67=$O3s; $O65[]=$O65[$l3r]; if ($l3r == 0) { $l5r=""; } else { $l5r=","; } l5q($O65[$l3r+1],$lj,$Oj,$l5k,$l67,$l5r=$l5r); } else { $l67=$l3t; $O5q=$O65[$l3r]; l5q($O5q,$lj,$Oj,$l5k,$l67,$l5r=","); $O5q.=$O66; O5u($O64,$O5q); if ($O3q == $O3r-1) { array_pop($O65); } } } function O67($l3k,$l68) { $O68=l69($l3k)["cache"]; if ($O68) { if (LOG) { showmessage( __FUNCTION__ ,"note","$l3k - Accelerating dashboard...\n"); } $O69=array(); if (array_key_exists("panelsJSON",$l68)) { $l6a=json_decode($l68["panelsJSON"],TRUE); foreach ($l6a as $O6a) { if (array_key_exists("id",$O6a)) { $l6b=dbcreatedbconnection(KIBELLADB); $O6b=dbdbhexecutesqlquery($l6b->getdbhandle(),"select * from ".l3." where ".l4." <> '".O4."' and ".O3." = '".$O6a["id"]."'"); $l6b->close(); if (count($O6b)>0) { assert(count($O6b) == 1,"There is only one object that matches the searched ID"); $O5x=$O6b[0][O2b]; $l6c["objects"][]=array("id" => $O6a["id"],"tableid" => $l3k,"query" => $O5x); if ($O5x != NULL) { $O5y=l5z($l3k,$O5x); $O6c=l1j($O5y); $l1i=$O6c["responseFile"]; $O5m=$O6c["parsedQuery"]; if ($l1i !== FALSE) { $l5m=file_get_contents($l1i); } $O60=O5l($l5m,$O5m); if ($O60 !== FALSE) { $O69[$O6a["id"]]=$O60; } } } } } if (count($O69)>0) { l60($l6c,$O69); } } } } function dashacceleratealldashboards($l3k,$l1h=FALSE) { $O68=l69($l3k)["cache"]; if ($O68) { $l6d=O6d($l3k); if ($l6d !== FALSE) { foreach ($l6d as $l6e) { if ($l1h) echo "<pre>Accelerating dashboard ".$l6e[O3]."...</pre>"; ob_flush(); $l68=json_decode($l6e[l2b],TRUE); O67($l3k,$l68); } } } } function dashacceleratetopqueries($l3k,$O3l=l3j,$l1h=FALSE) { $O68=l69($l3k)["cache"]; if ($O68 && $O3l>0) { $O6e=l6f($l3k); if ($O6e !== FALSE) { $O6f=0; foreach ($O6e as $l6g) { $O6f += $l6g["n"]; $O6g=$l6g["counter"]; } $l6h=0; $O6h=$O6e[0]["counter"]; foreach ($O6e as $l6g) { $l6h += $l6g["n"]; if ($l6h/$O6f>$O3l/0144) { $O6g=$O6h; break; } $O6h=$l6g["counter"]; } if ($l1h) echo "<pre>=> Queries to accelerate should have been run at least $O6g times.</pre>"; $l6i=O6i($l3k,$O6g); if ($l6i !== FALSE) { $O4a=0; foreach ($l6i as $l5y) { $O4a ++; $l6j=$l5y[O2c]; $O6j=$l5y[O2e]; if ($l1h) echo "<pre>Running query $O4a with MD5 $l6j (run $O6j times)</pre>"; $O5x=$l5y[l2e]; $O5y=l5z($l3k,$O5x); l1j($O5y); } } } } }